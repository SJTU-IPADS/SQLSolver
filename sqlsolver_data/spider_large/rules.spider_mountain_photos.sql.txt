SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15
select count(*) from camera_lens where  camera_lens.focal_length_mm > 15
SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC
select camera_lens.brand , camera_lens.name from camera_lens   order by camera_lens.max_aperture desc
SELECT id ,  color ,  name FROM photos
select photos.id , photos.color , photos.name from photos
SELECT max(height) ,  avg(height) FROM mountain
select max(mountain.height) , avg(mountain.height) from mountain
SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'
select avg(mountain.prominence) from mountain where  mountain.country = "Morocco"
SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'
select mountain.name , mountain.height , mountain.prominence from mountain where  mountain.range != "Aberdare Range"
SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000
select mountain.id , mountain.name from photos join mountain on photos.mountain_id = mountain.id where  mountain.height > 4000
SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2
select mountain.id , mountain.name from photos join mountain on photos.mountain_id = mountain.id  group by photos.mountain_id having  count(*) >= 2
SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
select camera_lens.name from photos join camera_lens on photos.camera_lens_id = camera_lens.id  group by photos.camera_lens_id  order by count(*) desc limit 1
SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'
select camera_lens.name from photos join camera_lens on photos.camera_lens_id = camera_lens.id where  camera_lens.brand = "Sigma" or camera_lens.brand = "Olympus"
SELECT count(DISTINCT brand) FROM camera_lens
select count( distinct camera_lens.brand) from camera_lens
SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )
select count(*) from camera_lens where  camera_lens.id not in (select photos.camera_lens_id from photos  )
SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'
select count( distinct photos.camera_lens_id) from photos join mountain on photos.mountain_id = mountain.id where  mountain.country = "Ethiopia"
SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'
select camera_lens.brand from photos join mountain on photos.mountain_id = mountain.id join camera_lens on photos.camera_lens_id = camera_lens.id where  mountain.range = "Toubkal Atlas"   intersect select camera_lens.brand from photos join mountain on photos.mountain_id = mountain.id join camera_lens on photos.camera_lens_id = camera_lens.id where  mountain.range = "Lasta Massif"
SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'
select mountain.name , mountain.prominence from mountain   except select mountain.name , mountain.prominence from photos join mountain on photos.mountain_id = mountain.id join camera_lens on photos.camera_lens_id = camera_lens.id where  camera_lens.brand = "Sigma"
SELECT name FROM camera_lens WHERE name LIKE "%Digital%"
select camera_lens.name from camera_lens where  camera_lens.name like "%Digital%"
SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)
select camera_lens.name , count(*) from photos join camera_lens on photos.camera_lens_id = camera_lens.id  group by photos.camera_lens_id  order by count(*) asc
