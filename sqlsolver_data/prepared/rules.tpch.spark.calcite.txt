select l_returnflag,  l_linestatus,  sum(l_quantity) as sum_qty,  sum(l_extendedprice) as sum_base_price,  sum(c1) as sum_disc_price,  sum(c2) as sum_charge,  avg(l_quantity) as avg_qty,  avg(l_extendedprice) as avg_price,  avg(l_discount) as avg_disc,  count(*) as count_order from (select l_returnflag,  l_linestatus,  l_quantity,  l_extendedprice,  l_extendedprice * (1 - l_discount) as c1,  l_extendedprice * (1 - l_discount) * (1 + l_tax) as c2,  l_discount from (select l_quantity,  l_extendedprice,  l_discount,  l_tax,  l_returnflag,  l_linestatus  from lineitem  where l_shipdate IS NOT NULL  and l_shipdate <= 1 ) AS SA) as t0 group by l_returnflag,  l_linestatus order by l_returnflag,  l_linestatus
SELECT l_returnflag AS L_RETURNFLAG, l_linestatus AS L_LINESTATUS, a1 AS SUM_QTY, a2 AS SUM_BASE_PRICE, a3 AS SUM_DISC_PRICE, a4 AS SUM_CHARGE, a1 / a6 AS AVG_QTY, a2 / a6 AS AVG_PRICE, a5 / a6 AS AVG_DISC, a6 AS COUNT_ORDER FROM ( SELECT l_returnflag, l_linestatus, SUM(l_quantity) AS a1, SUM(l_extendedprice) AS a2, SUM(c1) AS a3, SUM(c2) AS a4, SUM(l_discount) AS a5, COUNT(*) AS a6 FROM ( SELECT l_returnflag, l_linestatus, l_quantity, l_extendedprice, l_extendedprice * (1 - l_discount) AS c1, l_extendedprice * (1 - l_discount) * (1 + l_tax) AS c2, l_discount FROM lineitem WHERE l_shipdate <= 1 ) AS SB GROUP BY l_returnflag, l_linestatus ) AS SA ORDER BY l_returnflag, l_linestatus


select l_orderkey,  sum(c1) as revenue,  o_orderdate,  o_shippriority from (select o_orderdate,  o_shippriority,  l_orderkey,  l_extendedprice,  l_discount,  l_extendedprice * (1 - l_discount) as c1  from (select o_orderkey,  o_orderdate,  o_shippriority  from (select c_custkey  from customer  where c_mktsegment IS NOT NULL and c_mktsegment = 'BUILDING' and c_custkey IS NOT NULL  ) as SC  join (select o_orderkey,  o_custkey,  o_orderdate,  o_shippriority  from orders  where o_orderdate IS NOT NULL AND o_orderdate < 1 and o_custkey IS NOT NULL and o_orderkey IS NOT NULL  ) as SD  on SC.c_custkey = SD.o_custkey  ) as SA  join (select l_orderkey,  l_extendedprice,  l_discount  from lineitem  where l_shipdate IS NOT NULL and l_shipdate > 1 and l_orderkey IS NOT NULL  ) as SB  on SB.l_orderkey = SA.o_orderkey  ) as T group by l_orderkey,  o_orderdate,  o_shippriority order by revenue desc,  o_orderdate limit 10
SELECT l_orderkey AS L_ORDERKEY, COALESCE( SUM( c1 ), 0 ) AS REVENUE, o_orderdate AS O_ORDERDATE, o_shippriority AS O_SHIPPRIORITY FROM ( SELECT l_orderkey, l_extendedprice * (1 - l_discount) AS c1, o_orderdate, o_shippriority FROM ( SELECT l_orderkey, l_extendedprice, l_discount, l_shipdate FROM lineitem WHERE l_shipdate > 1 ) AS t0 INNER JOIN ( ( SELECT c_custkey, c_mktsegment FROM customer WHERE c_mktsegment = 'BUILDING' ) AS t2 INNER JOIN ( SELECT o_orderkey, o_custkey, o_orderdate, o_shippriority FROM orders WHERE o_orderdate < 1 ) AS t4 ON t2.c_custkey = t4.o_custkey ) ON t0.l_orderkey = t4.o_orderkey ) AS TA GROUP BY l_orderkey, o_orderdate, o_shippriority ORDER BY REVENUE DESC, o_orderdate LIMIT 10
select o_orderpriority, count(*) as order_count from ( select o_orderpriority from ( select o_orderkey, o_orderpriority from orders where o_orderdate IS NOT NULL and o_orderdate >= 1 and o_orderdate < 4 and o_orderkey in ( select l_orderkey from lineitem where l_commitdate IS NOT NULL and l_receiptdate IS NOT NULL and l_commitdate < l_receiptdate ) ) AS SB ) AS SA group by o_orderpriority order by o_orderpriority
select sub.o_orderpriority, count(*) as order_count from ( select o_orderdate, o_orderpriority from orders where o_orderdate >= 1 and o_orderdate < 1 + 3 and o_orderkey in ( select l_orderkey from lineitem where l_commitdate < l_receiptdate ) ) as sub group by sub.o_orderpriority order by sub.o_orderpriority
select n_name,  sum(c1) as revenue from (select l_extendedprice,  l_discount,  n_name,  l_extendedprice * (1 - l_discount) as c1  from (select l_extendedprice,  l_discount,  n_name,  n_regionkey  from (select l_extendedprice,  l_discount,  s_nationkey  from (select c_nationkey,  l_suppkey,  l_extendedprice,  l_discount  from (select c_nationkey,  o_orderkey  from (select c_custkey,  c_nationkey  from customer  where c_custkey IS NOT NULL and c_nationkey IS NOT NULL  ) as SJ  join (select o_orderkey,  o_custkey  from orders  where o_orderdate IS NOT NULL and o_orderdate >= 1 and o_orderdate < 2  and o_orderkey IS NOT NULL and o_custkey IS NOT NULL  ) as SK   on SJ.c_custkey = SK.o_custkey  ) as SH  join (select l_orderkey,  l_suppkey,  l_extendedprice,  l_discount  from lineitem  where l_orderkey IS NOT NULL and l_suppkey IS NOT NULL  ) as SI  on SI.l_orderkey = SH.o_orderkey  ) as SF  join (select s_suppkey,  s_nationkey  from supplier  where s_suppkey IS NOT NULL and s_nationkey IS NOT NULL  ) as SG  on SF.l_suppkey = SG.s_suppkey and SF.c_nationkey = SG.s_nationkey  ) as SD  join (select n_nationkey,  n_name,  n_regionkey  from nation  where n_nationkey IS NOT NULL and n_regionkey IS NOT NULL  ) as SE   on SD.s_nationkey = SE.n_nationkey  ) as SB  join (select r_regionkey  from region  where (r_name IS NOT NULL and r_name = 'AMERICA') and r_regionkey IS NOT NULL  ) as SC  on SB.n_regionkey = SC.r_regionkey  ) as SA group by n_name order by revenue desc
SELECT t1.n_name AS n_name, SUM(t6.c1) AS revenue FROM ( SELECT r_regionkey, r_name FROM region WHERE r_name = 'AMERICA' ) AS t0 INNER JOIN ( SELECT n_nationkey, n_name, n_regionkey FROM nation ) AS t1 ON t0.r_regionkey = t1.n_regionkey INNER JOIN ( SELECT s_suppkey, s_nationkey FROM supplier ) AS t2 ON t1.n_nationkey = t2.s_nationkey INNER JOIN ( ( SELECT c_custkey, c_nationkey FROM customer ) AS t3 INNER JOIN ( SELECT o_orderkey, o_custkey, o_orderdate FROM orders WHERE o_orderdate >= 1 AND o_orderdate < 1 + 1 ) AS t5 ON t3.c_custkey = t5.o_custkey INNER JOIN ( SELECT l_orderkey, l_suppkey, l_extendedprice, l_discount, l_extendedprice * (1 - l_discount) AS c1 FROM lineitem ) AS t6 ON t5.o_orderkey = t6.l_orderkey ) ON t2.s_suppkey = t6.l_suppkey AND t2.s_nationkey = t3.c_nationkey GROUP BY t1.n_name ORDER BY revenue DESC
select sum(c1) as revenue from (select l_extendedprice,  l_discount,  l_extendedprice * l_discount as c1  from lineitem  where l_shipdate IS NOT NULL   and l_discount IS NOT NULL  and l_quantity IS NOT NULL  and l_shipdate >= 1  and l_shipdate < 2  and l_discount >= 5  and l_discount <= 7  and l_quantity < 24  ) as SA
SELECT SUM(c1) AS REVENUE FROM (SELECT lineitem.*, l_extendedprice * l_discount AS c1 FROM lineitem) AS t0 WHERE l_shipdate >= 1  AND l_shipdate < 1 + 1 AND (l_discount >= 6 - 1 AND l_discount <= 6 + 1) AND l_quantity < 24
SELECT supp_nation,  cust_nation,  l_year,  SUM(volume) AS revenue FROM  (SELECT SA.n_name AS supp_nation,  SB.n_name AS cust_nation,  l_shipdate AS l_year,  l_extendedprice * (1 - l_discount) AS volume  FROM (SELECT l_extendedprice,  l_discount,  l_shipdate,  c_nationkey,  n_name  FROM (SELECT s_nationkey,  l_extendedprice,  l_discount,  l_shipdate,  c_nationkey  FROM (SELECT s_nationkey,  l_extendedprice,  l_discount,  l_shipdate,  o_custkey  FROM (SELECT s_nationkey,  l_orderkey,  l_extendedprice,  l_discount,  l_shipdate  FROM (SELECT s_suppkey,  s_nationkey  FROM supplier  WHERE s_suppkey IS NOT NULL AND s_nationkey IS NOT NULL  ) AS SI  JOIN (SELECT l_orderkey,  l_suppkey,  l_extendedprice,  l_discount,  l_shipdate  FROM lineitem  WHERE l_shipdate IS NOT NULL AND (l_shipdate >= 1 AND l_shipdate <= 2   AND l_suppkey IS NOT NULL AND l_orderkey IS NOT NULL)  ) AS SJ  ON SI.s_suppkey = SJ.l_suppkey  ) AS SG  JOIN (SELECT o_orderkey,  o_custkey  FROM orders  WHERE o_orderkey IS NOT NULL AND o_custkey IS NOT NULL  ) AS SH  ON SH.o_orderkey = SG.l_orderkey  ) AS SE  JOIN (SELECT c_custkey,  c_nationkey  FROM customer  WHERE c_custkey IS NOT NULL AND c_nationkey IS NOT NULL  ) AS SF  ON c_custkey = o_custkey   ) AS SC  JOIN (SELECT n_nationkey,  n_name  FROM nation  WHERE n_nationkey IS NOT NULL AND (n_name = 123 OR n_name = 456)  ) AS SD  ON SC.s_nationkey = SD.n_nationkey   ) AS SA  JOIN  (SELECT n_nationkey,  n_name  FROM nation  WHERE n_nationkey IS NOT NULL AND (n_name = 456 OR n_name = 123)  ) AS SB  ON SA.c_nationkey = SB.n_nationkey AND ((SA.n_name = 123 AND SB.n_name = 456)  OR (SA.n_name = 456 AND SB.n_name = 123))  ) AS shipping GROUP BY supp_nation,  cust_nation,  l_year ORDER BY supp_nation,  cust_nation,  l_year
SELECT sub1.n_name1 AS supp_nation, sub1.n_name2 AS cust_nation, sub2.l_shipdate AS l_year, SUM(sub2.volume) AS revenue FROM( SELECT * FROM ( SELECT c_custkey AS c_custkey, c_nationkey AS c_nationkey FROM customer) AS c INNER JOIN ( SELECT n_nationkey AS n_nationkey1, n_name AS n_name1 FROM nation ) AS n1 on c.c_nationkey = n1.n_nationkey1 INNER JOIN ( SELECT n_nationkey AS n_nationkey2, n_name AS n_name2 FROM nation ) AS n2 ON ( n1.n_name1 = 123 AND n2.n_name2 = 456 ) OR ( n1.n_name1 = 123 AND n2.n_name2 = 456 ) ) AS sub1 INNER JOIN ( SELECT * FROM ( SELECT s_suppkey, s_nationkey FROM supplier ) AS t INNER JOIN ( SELECT l_orderkey, l_suppkey, l_extendedprice, l_discount, l_shipdate, l_extendedprice * (1 - l_discount) AS volume FROM lineitem WHERE l_shipdate >= 1 AND l_shipdate <= 2 ) AS t1 ON t.s_suppkey = t1.l_suppkey INNER JOIN ( SELECT o_orderkey, o_custkey FROM orders ) AS t2 ON t1.l_orderkey = t2.o_orderkey ORDER BY t2.o_custkey, t.s_nationkey ) AS sub2 ON sub1.c_custkey = sub2.o_custkey GROUP BY sub1.n_name1, sub1.n_name2, sub2.l_shipdate ORDER BY supp_nation, cust_nation, l_year
SELECT o_year,  s1 / s2 AS mkt_share FROM  (SELECT o_year,  SUM(c1) AS s1, SUM(volume) AS s2 FROM  (SELECT t1.*, CASE  WHEN nation = 'UNITED KINGDOM' THEN volume  ELSE 0  END AS c1 FROM (SELECT o_orderdate AS o_year,  l_extendedprice * (1 - l_discount) AS volume,  SA.n_name AS nation  FROM (SELECT l_extendedprice,  l_discount,  o_orderdate,  n_regionkey,  n_name  FROM (SELECT l_extendedprice,  l_discount,  s_nationkey,  o_orderdate,  n_regionkey  FROM (SELECT l_extendedprice,  l_discount,  s_nationkey,  o_orderdate,  c_nationkey  FROM (SELECT l_extendedprice,  l_discount,  s_nationkey,  o_custkey,  o_orderdate  FROM (SELECT l_orderkey,  l_extendedprice,  l_discount,  s_nationkey  FROM (SELECT l_orderkey,  l_suppkey,  l_extendedprice,  l_discount  FROM (SELECT p_partkey  FROM part  WHERE p_type IS NOT NULL AND p_type = 'ECONOMY POLISHED BRASS' AND p_partkey IS NOT NULL  ) AS SM  JOIN (SELECT l_orderkey,  l_partkey,  l_suppkey,  l_extendedprice,  l_discount  FROM lineitem  WHERE l_partkey IS NOT NULL AND l_suppkey IS NOT NULL AND l_orderkey IS NOT NULL  ) AS SN  ON SM.p_partkey = SN.l_partkey  ) AS SK  JOIN (SELECT s_suppkey,  s_nationkey  FROM supplier  WHERE s_suppkey IS NOT NULL AND s_nationkey IS NOT NULL  ) AS SL  ON SL.s_suppkey = SK.l_suppkey  ) AS SI  JOIN (SELECT o_orderkey,  o_custkey,  o_orderdate  FROM orders  WHERE o_orderdate IS NOT NULL AND (o_orderdate >= 1 AND o_orderdate <= 2)  AND o_orderkey IS NOT NULL AND o_custkey IS NOT NULL  ) AS SJ  ON SI.l_orderkey = SJ.o_orderkey   ) AS SG  JOIN (SELECT c_custkey,  c_nationkey  FROM customer  WHERE c_custkey IS NOT NULL AND c_nationkey IS NOT NULL  ) AS SH  ON SG.o_custkey = SH.c_custkey  ) AS SE  JOIN (SELECt n_nationkey,  n_regionkey  FROM nation  WHERE n_nationkey IS NOT NULL AND n_regionkey IS NOT NULL  ) AS SF  ON SE.c_nationkey = SF.n_nationkey  ) AS SC  JOIN (SELECT n_nationkey,  n_name  FROM nation  WHERE n_nationkey IS NOT NULL   ) AS SD  ON SC.s_nationkey = SD.n_nationkey  ) AS SA  JOIN (SELECT r_regionkey  FROM region  WHERE r_name IS NOT NULL AND r_name = 'EUROPE' AND r_regionkey IS NOT NULL  ) AS SB  ON SA.n_regionkey = SB.r_regionkey  ) AS t1) AS all_nations GROUP BY o_year) AS t0 ORDER BY o_year
SELECT sub3.o_year, sub3.s1 / sub3.s2 AS MKT_SHARE FROM(SELECT sub2.o_orderdate AS o_year, SUM(sub2.c1) AS s1, SUM(sub2.volume) AS s2 FROM ( SELECT *, CASE WHEN t9.n_name = 'UNITED KINGDOM' THEN t2.volume ELSE 0 END AS c1 FROM ( SELECT p_partkey, p_type FROM part WHERE p_type = 'ECONOMY POLISHED BRASS') AS t0 CROSS JOIN ( SELECT s_suppkey, s_nationkey FROM supplier ) AS t1 INNER JOIN ( SELECT l_orderkey, l_partkey, l_suppkey, l_extendedprice, l_discount, l_extendedprice * (1 - l_discount) AS volume FROM lineitem ) AS t2 ON t0.p_partkey = t2.l_partkey AND t1.s_suppkey = t2.l_suppkey INNER JOIN ( SELECT o_orderkey, o_custkey, o_orderdate FROM orders WHERE o_orderdate >= 1 AND o_orderdate <= 2 ) AS t4 ON t2.l_orderkey = t4.o_orderkey INNER JOIN ( SELECT c_custkey, c_nationkey FROM customer ) AS t5 ON t4.o_custkey = t5.c_custkey INNER JOIN ( SELECT n_nationkey AS nk1, n_regionkey FROM nation ) AS t6 ON t5.c_nationkey = t6.nk1 INNER JOIN ( SELECT r_regionkey, r_name FROM region WHERE r_name = 'EUROPE' ) AS t8 ON t6.n_regionkey = t8.r_regionkey INNER JOIN ( SELECT n_nationkey AS nk2, n_name FROM nation ) AS t9 ON t1.s_nationkey = t9.nk2 ) AS sub2 GROUP BY sub2.o_orderdate ) AS sub3 ORDER BY sub3.o_year
SELECT nation,  o_year,  SUM(amount) AS sum_profit FROM  (SELECT n_name AS nation,  o_orderdate AS o_year,  l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount  FROM (SELECT l_quantity,  l_extendedprice,  l_discount,  s_nationkey,  ps_supplycost,  o_orderdate  FROM (SELECT l_orderkey,  l_quantity,  l_extendedprice,  l_discount,  s_nationkey,  ps_supplycost  FROM (SELECT l_orderkey,  l_partkey,  l_suppkey,  l_quantity,  l_extendedprice,  l_discount,  s_nationkey  FROM (SELECT l_orderkey,  l_partkey,  l_suppkey,  l_quantity,  l_extendedprice,  l_discount  FROM (SELECT p_partkey  FROM part  WHERE p_name IS NOT NULL AND p_name = '%honeydew%' AND p_partkey IS NOT NULL  ) AS SI  JOIN (SELECT l_orderkey,  l_partkey,  l_suppkey,  l_quantity,  l_extendedprice,  l_discount  FROM lineitem  WHERE l_partkey IS NOT NULL AND l_suppkey IS NOT NULL AND l_orderkey IS NOT NULL  ) AS SJ  ON SI.p_partkey = SJ.l_partkey  ) AS SG  JOIN (SELECT s_suppkey,  s_nationkey  FROM supplier  WHERE s_suppkey IS NOT NULL AND s_nationkey IS NOT NULL  ) AS SH  ON SH.s_suppkey = SG.l_suppkey   ) AS SE  JOIN (SELECT ps_partkey,  ps_suppkey,  ps_supplycost  FROM partsupp  WHERE ps_suppkey IS NOT NULL AND ps_partkey IS NOT NULL  ) AS SF  ON SF.ps_suppkey = SE.l_suppkey AND SF.ps_partkey = SE.l_partkey    ) AS SC  JOIN (SELECT o_orderkey,  o_orderdate  FROM orders  WHERE o_orderkey IS NOT NULL  ) AS SD  ON SD.o_orderkey = SC.l_orderkey  ) AS SA  JOIN (SELECT n_nationkey,  n_name  FROM nation  WHERE n_nationkey IS NOT NULL  ) AS SB  ON SA.s_nationkey = SB.n_nationkey  ) AS profit GROUP BY nation,  o_year ORDER BY nation,  o_year DESC
SELECT sub.n_name AS NATION, sub.o_orderdate AS O_YEAR, SUM(sub.amount) AS SUM_PROFIT FROM( SELECT *, t2.l_extendedprice * (1 - t2.l_discount) - t3.ps_supplycost * t2.l_quantity AS amount FROM ( SELECT p_partkey, p_name FROM part WHERE p_name = '%honeydew%') AS t0 INNER JOIN ( ( SELECT s_suppkey, s_nationkey FROM supplier ) AS t1 INNER JOIN ( SELECT l_orderkey, l_partkey, l_suppkey, l_quantity, l_extendedprice, l_discount FROM lineitem ) AS t2 ON t1.s_suppkey = t2.l_suppkey ) ON t0.p_partkey = t2.l_partkey INNER JOIN ( SELECT ps_partkey, ps_suppkey, ps_supplycost FROM partsupp ) AS t3 ON t2.l_suppkey = t3.ps_suppkey AND t2.l_partkey = t3.ps_partkey INNER JOIN ( SELECT n_nationkey, n_name FROM nation ) AS t4 ON t1.s_nationkey = t4.n_nationkey INNER JOIN ( SELECT o_orderkey, o_orderdate FROM orders ) AS t5 ON t2.l_orderkey = t5.o_orderkey ) AS sub GROUP BY sub.n_name, sub.o_orderdate ORDER BY sub.n_name, sub.o_orderdate
select c_custkey,  c_name,  sum(c1) as revenue,  c_acctbal,  n_name,  c_address,  c_phone,  c_comment from (select c_custkey,  c_name,  c_address,  c_phone,  c_acctbal,  c_comment,  l_extendedprice,  l_discount,  n_name,  l_extendedprice * (1 - l_discount) as c1  from (select c_custkey,  c_name,  c_address,  c_nationkey,  c_phone,  c_acctbal,  c_comment,  l_extendedprice,  l_discount  from (select c_custkey,  c_name,  c_address,  c_nationkey,  c_phone,  c_acctbal,  c_comment,  o_orderkey  from (select c_custkey,  c_name,  c_address,  c_nationkey,  c_phone,  c_acctbal,  c_comment  from customer  where c_custkey IS NOT NULL and c_nationkey IS NOT NULL  ) AS SF  join (select o_orderkey,  o_custkey  from orders  where o_orderdate IS NOT NULL and o_orderdate >= 1 and o_orderdate < 4  and o_custkey IS NOT NULL and o_orderkey IS NOT NULL  ) AS SG  on SF.c_custkey = SG.o_custkey  ) as SD  join (select l_orderkey,  l_extendedprice,  l_discount  from lineitem  where l_returnflag IS NOT NULL and l_returnflag = 'R' and l_orderkey IS NOT NULL  ) as SE  on SE.l_orderkey = SD.o_orderkey  ) as SB  join (select n_nationkey,  n_name  from nation  where n_nationkey IS NOT NULL  ) as SC  on SB.c_nationkey = SC.n_nationkey  ) as SA group by c_custkey,  c_name,  c_acctbal,  c_phone,  n_name,  c_address,  c_comment order by revenue desc limit 20
SELECT c_custkey AS C_CUSTKEY, c_name AS C_NAME, COALESCE( SUM(c1), 0 ) AS REVENUE, c_acctbal AS C_ACCTBAL, n_name AS N_NAME, c_address AS C_ADDRESS, c_phone AS C_PHONE, c_comment AS C_COMMENT FROM ( SELECT t0.c_custkey, t0.c_name, t4.l_extendedprice * (1 - t4.l_discount) AS c1, t0.c_acctbal, t.n_name, t0.c_address, t0.c_phone, t0.c_comment FROM ( SELECT n_nationkey, n_name FROM nation ) AS t INNER JOIN ( ( SELECT c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_comment FROM customer ) AS t0 INNER JOIN ( SELECT o_orderkey, o_custkey, o_orderdate FROM orders WHERE o_orderdate >= 1 AND o_orderdate < 1 + 3 ) AS t2 ON t0.c_custkey = t2.o_custkey INNER JOIN ( SELECT l_orderkey, l_extendedprice, l_discount, l_returnflag FROM lineitem WHERE l_returnflag = 'R' ) AS t4 ON t2.o_orderkey = t4.l_orderkey ) ON t.n_nationkey = t0.c_nationkey ) AS SA GROUP BY c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment ORDER BY c1 DESC LIMIT 20
SELECT ps_partkey, VALUE FROM ( SELECT ps_partkey, SUM(c1) AS VALUE, c2 FROM ( SELECT ps_partkey, ps_supplycost * ps_availqty AS c1, c2 FROM ( SELECT ps_partkey, ps_availqty, ps_supplycost, c2 FROM ( SELECT ps_partkey, ps_availqty, ps_supplycost, s_nationkey FROM ( SELECT ps_partkey, ps_suppkey, ps_availqty, ps_supplycost FROM partsupp WHERE ps_suppkey IS NOT NULL ) AS SG JOIN ( SELECT s_suppkey, s_nationkey FROM supplier WHERE s_suppkey IS NOT NULL AND s_nationkey IS NOT NULL ) AS SH ON SG.ps_suppkey = SH.s_suppkey ) AS SE JOIN ( SELECT n_nationkey FROM nation WHERE n_name IS NOT NULL AND n_name = 'ARGENTINA' AND n_nationkey IS NOT NULL ) AS SF ON SE.s_nationkey = SF.n_nationkey JOIN ( SELECT s * 1 AS c2 FROM ( SELECT SUM(c3) AS s FROM ( SELECT ps_supplycost * ps_availqty AS c3 FROM ( SELECT ps_availqty, ps_supplycost FROM ( SELECT ps_availqty, ps_supplycost, s_nationkey FROM ( SELECT ps_suppkey, ps_availqty, ps_supplycost FROM partsupp WHERE ps_suppkey IS NOT NULL ) AS SC JOIN ( SELECT s_suppkey, s_nationkey FROM supplier WHERE s_suppkey IS NOT NULL AND s_nationkey IS NOT NULL ) AS SD ON SC.ps_suppkey = SD.s_suppkey ) AS SA JOIN ( SELECT n_nationkey FROM nation WHERE n_name IS NOT NULL AND n_name = 'ARGENTINA' AND n_nationkey IS NOT NULL ) AS SB ON SA.s_nationkey = SB.n_nationkey ) AS SS1 ) AS SS2 ) AS SS3 ) AS t0 ) AS SS ) AS t1 GROUP BY ps_partkey, c2 ) AS t2 WHERE VALUE IS NOT NULL AND VALUE > c2 ORDER BY VALUE DESC
SELECT sub1.PS_PARTKEY AS PS_PARTKEY, sub1.VALUE1 AS VALUE FROM ( SELECT ps_partkey AS PS_PARTKEY, SUM(c1) AS VALUE1 FROM ( SELECT t2.ps_partkey AS PS_PARTKEY, t2.ps_supplycost * t2.ps_availqty AS c1 FROM ( SELECT n_nationkey, n_name FROM nation WHERE n_name = 'ARGENTINA' ) AS t0 INNER JOIN ( SELECT s_suppkey, s_nationkey FROM supplier ) AS t1 ON t0.n_nationkey = t1.s_nationkey INNER JOIN ( SELECT ps_partkey, ps_suppkey, ps_availqty, ps_supplycost FROM partsupp ) AS t2 ON t1.s_suppkey = t2.ps_suppkey ) AS SA GROUP BY ps_partkey ) AS sub1 INNER JOIN ( SELECT s1 * 1 AS VALUE2 FROM ( SELECT SUM(c1) AS s1 FROM ( SELECT t2.ps_supplycost * t2.ps_availqty AS c1 FROM ( SELECT n_nationkey, n_name FROM nation WHERE n_name = 'ARGENTINA' ) AS t0 INNER JOIN ( SELECT s_suppkey, s_nationkey FROM supplier ) AS t1 ON t0.n_nationkey = t1.s_nationkey INNER JOIN ( SELECT ps_suppkey, ps_availqty, ps_supplycost FROM partsupp ) AS t2 ON t1.s_suppkey = t2.ps_suppkey ) AS SB ) AS SC ) AS sub2 ON sub1.VALUE1 > sub2.VALUE2 ORDER BY sub1.VALUE1 DESC
select l_shipmode,  sum(c1) as high_line_count,  sum(c2) as low_line_count from (select l_shipmode,  case  when o_orderpriority = '1-URGENT'  or o_orderpriority = '2-HIGH' then 1  else 0  end as c1,  case  when o_orderpriority <> '1-URGENT'  and o_orderpriority <> '2-HIGH' then 1  else 0  end as c2 from (select o_orderpriority,  l_shipmode  from (select o_orderkey,  o_orderpriority  from orders  where o_orderkey IS NOT NULL  ) as SB  join (select l_orderkey,  l_shipmode  from lineitem  where (l_commitdate IS NOT NULL and l_receiptdate IS NOT NULL and l_shipdate IS NOT NULL)  and l_shipmode in ('AIR', 'TRUCK') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate  and l_receiptdate >= 1 and l_receiptdate < 2 and l_orderkey IS NOT NULL  ) as SC  on SB.o_orderkey = SC.l_orderkey  ) as SA) as t0  group by l_shipmode order by l_shipmode
SELECT l_shipmode, COUNT(c1) AS HIGH_LINE_COUNT, COUNT(c2) AS LOW_LINE_COUNT FROM ( SELECT l_shipmode, CASE WHEN t.o_orderpriority IN ('1-URGENT', '2-HIGH') THEN 1 ELSE NULL END AS c1, CASE WHEN t.o_orderpriority NOT IN ('1-URGENT', '2-HIGH') THEN 1 ELSE NULL END AS c2 FROM ( SELECT o_orderkey, o_orderpriority FROM orders ) AS t INNER JOIN ( SELECT l_orderkey, l_shipdate, l_commitdate, l_receiptdate, l_shipmode FROM lineitem WHERE l_shipmode IN ('AIR', 'TRUCK') AND l_commitdate < l_receiptdate AND l_shipdate < l_commitdate AND ( l_receiptdate >= 1 AND l_receiptdate < 1 + 1 ) ) AS t1 ON t.o_orderkey = t1.l_orderkey ) AS SA GROUP BY l_shipmode ORDER BY l_shipmode
SELECT c_count,  COUNT(*) AS custdist FROM  (SELECT c_custkey,  COUNT(o_orderkey) AS c_count  FROM (SELECT c_custkey,  o_orderkey  FROM (SELECT c_custkey  FROM customer  ) AS SB  LEFT OUTER JOIN (SELECT o_orderkey,  o_custkey  FROM orders  WHERE o_comment IS NOT NULL AND o_comment <> '%unusual%accounts%' and o_custkey IS NOT NULL  ) AS SC   ON SB.c_custkey = SC.o_custkey  ) AS SA  GROUP BY c_custkey  ) AS c_orders GROUP BY c_count ORDER BY custdist DESC,  c_count DESC
SELECT t2.C_COUNT, COUNT(*) AS CUSTDIST FROM (SELECT t.c_custkey, COUNT(t1.o_orderkey) AS C_COUNT FROM (SELECT c_custkey FROM customer) AS t LEFT JOIN (SELECT o_orderkey, o_custkey, o_comment FROM orders WHERE o_comment <> '%unusual%accounts%') AS t1 ON t.c_custkey = t1.o_custkey GROUP BY t.c_custkey) AS t2 GROUP BY t2.C_COUNT ORDER BY COUNT(*) DESC, t2.C_COUNT DESC
select 100 * s1 / s2 as promo_revenue from (select sum(c1) as s1, sum(c2) as s2 from (select l_extendedprice,  l_discount,  p_type,  case  when p_type = 'PROMO%' then l_extendedprice * (1 - l_discount)  else 0  end as c1,  l_extendedprice * (1 - l_discount) as c2  from (select l_partkey,  l_extendedprice,  l_discount  from lineitem  where l_shipdate IS NOT NULL and l_shipdate >= 1 and l_shipdate < 2  and l_partkey IS NOT NULL  ) as SB  join (select p_partkey,  p_type  from part  where p_partkey IS NOT NULL  ) as SC  on SB.l_partkey = SC.p_partkey  ) AS SA) AS t0
SELECT 100 * SUM(CASE WHEN t1.p_type = 'PROMO%' THEN t0.l_extendedprice * (1 - t0.l_discount) ELSE 0 END) / SUM(t0.l_extendedprice * (1 - t0.l_discount)) AS PROMO_REVENUE FROM (SELECT l_partkey, l_extendedprice, l_discount, l_shipdate FROM lineitem WHERE l_shipdate >= 1 AND l_shipdate < 1 + 1) AS t0 INNER JOIN (SELECT p_partkey, p_type FROM part) AS t1 ON t0.l_partkey = t1.p_partkey
SELECT p_brand, p_type, p_size, COUNT(DISTINCT ps_suppkey) AS supplier_cnt FROM ( SELECT ps_suppkey, p_brand, p_type, p_size FROM ( SELECT * FROM ( SELECT ps_partkey, ps_suppkey FROM partsupp WHERE ps_partkey IS NOT NULL and not exists ( SELECT 1 FROM supplier WHERE s_comment IS NOT NULL AND s_comment = 4 AND ( s_suppkey = ps_suppkey OR (s_suppkey = ps_suppkey) IS NULL ) ) ) AS SD ) AS SB JOIN ( SELECT p_partkey, p_brand, p_type, p_size FROM part WHERE p_brand IS NOT NULL AND p_type IS NOT NULL AND p_brand <> 31 AND p_type <> 10 AND p_size >= 6 AND p_size <= 35 AND p_partkey IS NOT NULL ) AS SC ON SC.p_partkey = SB.ps_partkey ) AS SA GROUP BY p_brand, p_type, p_size ORDER BY supplier_cnt DESC, p_brand, p_type, p_size
SELECT t1.p_brand, t1.p_type, t1.p_size, COUNT(DISTINCT t.ps_suppkey) AS SUPPLIER_CNT FROM (SELECT ps_partkey, ps_suppkey FROM partsupp) AS t INNER JOIN (SELECT p_partkey, p_brand, p_type, p_size FROM part WHERE p_brand <> 31 AND p_size >= 6 AND p_size <= 35 AND p_type <> 10) AS t1 ON t.ps_partkey = t1.p_partkey CROSS JOIN (SELECT COUNT(*) AS c, COUNT(*) AS ck FROM supplier WHERE s_comment = 4) AS t4 LEFT JOIN (SELECT t5.s_suppkey, t6.i FROM (SELECT * FROM supplier WHERE s_comment = 4) AS t5, (VALUES (TRUE)) AS t6 (i) GROUP BY t5.s_suppkey, t6.i) AS t8 ON t.ps_suppkey = t8.s_suppkey WHERE t4.c = 0 OR t8.i IS NULL AND t4.ck >= t4.c GROUP BY t1.p_brand, t1.p_type, t1.p_size ORDER BY COUNT(DISTINCT t.ps_suppkey) DESC, t1.p_brand, t1.p_type, t1.p_size
SELECT sum1 / 7 AS avg_yearly FROM (SELECT SUM(l_extendedprice) AS sum1 FROM ( SELECT l_extendedprice FROM ( SELECT l_quantity, l_extendedprice, p_partkey FROM ( SELECT l_partkey, l_quantity, l_extendedprice FROM lineitem WHERE l_partkey IS NOT NULL AND l_quantity IS NOT NULL ) AS t3 INNER JOIN ( SELECT p_partkey FROM part WHERE ((p_brand IS NOT NULL AND p_container IS NOT NULL) AND ((p_brand = 'Brand#25') AND (p_container = 'WRAP PACK'))) AND p_partkey IS NOT NULL ) AS t4 ON p_partkey = l_partkey ) AS t1 INNER JOIN ( SELECT * FROM ( SELECT 2 * avg0 AS pa, l_partkey FROM (SELECT avg(l_quantity) AS avg0, l_partkey FROM ( SELECT l_partkey, l_quantity FROM lineitem WHERE l_partkey IS NOT NULL ) AS t6 GROUP BY l_partkey) AS ta0 ) AS t5 WHERE pa IS NOT NULL ) AS t2 ON (l_quantity < pa) AND (l_partkey = p_partkey) ) AS t0) AS ta1

SELECT c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) FROM ( SELECT c_custkey, c_name, o_orderkey, o_totalprice, o_orderdate, l_quantity FROM ( SELECT c_custkey, c_name, o_orderkey, o_totalprice, o_orderdate FROM ( SELECT c_custkey, c_name FROM customer WHERE c_custkey IS NOT NULL ) AS t3 INNER JOIN ( SELECT * FROM ( SELECT o_orderkey, o_custkey, o_totalprice, o_orderdate FROM orders WHERE o_custkey IS NOT NULL AND o_orderkey IS NOT NULL ) AS t5 WHERE EXISTS ( SELECT 1 FROM ( SELECT l_orderkey FROM ( SELECT l_orderkey, sum(l_quantity) AS s FROM ( SELECT l_orderkey, l_quantity FROM lineitem ) AS t8 GROUP BY l_orderkey ) AS t7 WHERE s IS NOT NULL AND (s > 312.00) ) AS t6 WHERE o_orderkey = l_orderkey ) ) AS t4 ON c_custkey = o_custkey ) AS t1 INNER JOIN ( SELECT * FROM ( SELECT l_orderkey, l_quantity FROM lineitem WHERE l_orderkey IS NOT NULL ) AS t9 WHERE EXISTS ( SELECT 1 FROM ( SELECT l_orderkey FROM ( SELECT l_orderkey, sum(l_quantity) AS s FROM ( SELECT l_orderkey, l_quantity FROM lineitem ) AS t12 GROUP BY l_orderkey ) AS t11 WHERE s IS NOT NULL AND (s > 312.00) ) AS t10 WHERE t9.l_orderkey = t10.l_orderkey ) ) AS t2 ON o_orderkey = l_orderkey ) AS t0 GROUP BY c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice ORDER BY o_totalprice DESC, o_orderdate LIMIT 100
SELECT t4.c_name, t4.c_custkey, t4.o_orderkey, t4.o_orderdate, t4.o_totalprice, COALESCE( SUM(t5.l_quantity), 0 ) FROM ( SELECT t3.c_custkey, t3.c_name, t2.o_orderkey, t2.o_custkey, t2.o_totalprice, t2.o_orderdate, t1.L_ORDERKEY FROM ( SELECT L_ORDERKEY FROM ( SELECT l_orderkey AS L_ORDERKEY, SUM(l_quantity) AS s FROM lineitem GROUP BY l_orderkey ) AS ta0 WHERE COALESCE(s, 0) > 312 ) AS t1 INNER JOIN ( SELECT o_orderkey, o_custkey, o_totalprice, o_orderdate FROM orders ) AS t2 ON t1.L_ORDERKEY = t2.o_orderkey INNER JOIN ( SELECT c_custkey, c_name FROM customer ) AS t3 ON t2.o_custkey = t3.c_custkey ) AS t4 INNER JOIN ( SELECT l_orderkey, l_quantity FROM lineitem ) AS t5 ON t4.o_orderkey = t5.l_orderkey GROUP BY t4.c_custkey, t4.c_name, t4.o_orderkey, t4.o_totalprice, t4.o_orderdate ORDER BY t4.o_totalprice DESC, t4.o_orderdate FETCH NEXT 100 ROWS ONLY
SELECT  SUM(c1) AS revenue FROM  (SELECT l_extendedprice * (1 - l_discount) AS c1 FROM ( SELECT l_extendedprice, l_discount FROM ( SELECT l_partkey, l_quantity, l_extendedprice, l_discount FROM lineitem WHERE ((l_shipinstruct IS NOT NULL AND (l_shipmode = 'AIR' AND (l_shipinstruct = 'DELIVER IN PERSON'))) AND l_partkey IS NOT NULL) AND ((((l_quantity >= 4) AND (l_quantity <= 14)) OR ((l_quantity >= 16) AND (l_quantity <= 26))) OR ((l_quantity >= 30) AND (l_quantity <= 40))) ) AS t1 INNER JOIN ( SELECT p_partkey, p_brand, p_size, p_container FROM part WHERE ((p_size IS NOT NULL AND (p_size >= 1)) AND p_partkey IS NOT NULL) AND (((((p_brand = 'Brand#11') AND p_container = 'SM CASE') AND (p_size <= 5)) OR (((p_brand = 'Brand#33') AND p_container = 'MED BAG') AND (p_size <= 10))) OR (((p_brand = 'Brand#34') AND p_container = 'LG CASE') AND (p_size <= 15))) ) AS t2 ON (p_partkey = l_partkey) AND (((((((p_brand = 'Brand#11') AND p_container = 'SM CASE') AND (l_quantity >= 4)) AND (l_quantity <= 14)) AND (p_size <= 5)) OR (((((p_brand = 'Brand#33') AND p_container = 'MED BAG') AND (l_quantity >= 16)) AND (l_quantity <= 26)) AND (p_size <= 10))) OR (((((p_brand = 'Brand#34') AND p_container = 'LG CASE') AND (l_quantity >= 30)) AND (l_quantity <= 40)) AND (p_size <= 15))) ) AS t0) AS ta0
SELECT SUM(t.l_extendedprice * (1 - t.l_discount)) AS REVENUE FROM (SELECT l_partkey, l_quantity, l_extendedprice, l_discount, l_shipinstruct, l_shipmode FROM lineitem) AS t INNER JOIN (SELECT p_partkey, p_brand, p_size, p_container FROM part) AS t0 ON t.l_partkey = t0.p_partkey AND (t0.p_brand = 'Brand#11' AND t0.p_container = 'SM CASE') AND (t.l_quantity >= 4 AND t.l_quantity <= 14 AND (t0.p_size >= 1 AND t0.p_size <= 5) AND (t.l_shipmode = 'AIR' AND t.l_shipinstruct = 'DELIVER IN PERSON')) OR t.l_partkey = t0.p_partkey AND (t0.p_brand = 'Brand#33' AND t0.p_container = 'MED BAG') AND (t.l_quantity >= 16 AND t.l_quantity <= 26 AND (t0.p_size >= 1 AND t0.p_size <= 10) AND (t.l_shipmode = 'AIR' AND t.l_shipinstruct = 'DELIVER IN PERSON')) OR t.l_partkey = t0.p_partkey AND (t0.p_brand = 'Brand#34' AND t0.p_container = 'LG CASE') AND (t.l_quantity >= 30 AND t.l_quantity <= 40 AND (t0.p_size >= 1 AND t0.p_size <= 15) AND (t.l_shipmode = 'AIR' AND t.l_shipinstruct = 'DELIVER IN PERSON'))
SELECT s_name, s_address FROM ( SELECT s_name, s_address, s_nationkey FROM ( SELECT s_suppkey, s_name, s_address, s_nationkey FROM supplier WHERE s_nationkey IS NOT NULL ) AS t2 WHERE EXISTS ( SELECT 1 FROM ( SELECT ps_suppkey FROM ( SELECT * FROM ( SELECT ps_partkey, ps_suppkey, ps_availqty FROM partsupp WHERE ( ps_availqty IS NOT NULL AND ps_partkey IS NOT NULL ) AND ps_suppkey IS NOT NULL ) AS t6 WHERE EXISTS ( SELECT 1 FROM ( SELECT p_partkey FROM part WHERE p_name IS NOT NULL AND p_name = 'rosy' ) AS t7 WHERE ps_partkey = p_partkey ) ) AS t4 INNER JOIN ( SELECT * FROM ( SELECT sum(l_quantity) AS hs, l_partkey, l_suppkey FROM ( SELECT * FROM ( SELECT l_partkey, l_suppkey, l_quantity FROM lineitem WHERE ( ( ( l_shipdate IS NOT NULL AND (l_shipdate >= 1) ) AND (l_shipdate < 2) ) AND l_partkey IS NOT NULL ) AND l_suppkey IS NOT NULL ) AS t10 WHERE EXISTS ( SELECT 1 FROM ( SELECT p_partkey FROM part WHERE p_name IS NOT NULL AND p_name = 'rosy' ) AS t11 WHERE l_partkey = p_partkey ) ) AS t9 GROUP BY l_partkey, l_suppkey ) AS t8 WHERE hs IS NOT NULL ) AS t5 ON ( ( ps_availqty > hs ) AND (l_partkey = ps_partkey) ) AND (l_suppkey = ps_suppkey) ) AS t3 WHERE s_suppkey = ps_suppkey ) ) AS t0 INNER JOIN ( SELECT n_nationkey FROM nation WHERE ( n_name IS NOT NULL AND n_name = 'INDIA' ) AND n_nationkey IS NOT NULL ) AS t1 ON s_nationkey = n_nationkey ORDER BY s_name

SELECT cntrycode, count(1) AS numcust, sum(c_acctbal) AS totacctbal FROM ( SELECT c_phone AS cntrycode, c_acctbal FROM ( SELECT c_custkey, c_phone, c_acctbal FROM customer join ( SELECT avg(c_acctbal) as x FROM ( SELECT c_acctbal FROM customer WHERE c_acctbal IS NOT NULL AND ( (c_acctbal > 0.00) AND c_phone IN ( '13', '10', '23', '21', '19', '34', '32' ) ) ) AS t2 ) as s0 WHERE c_acctbal IS NOT NULL AND ( c_phone IN ( '13', '10', '23', '21', '19', '34', '32' ) ) AND c_acctbal > x ) AS t1 WHERE NOT EXISTS ( SELECT o_custkey FROM orders WHERE o_custkey = c_custkey ) ) AS t0 GROUP BY cntrycode ORDER BY cntrycode
SELECT t0.c_phone AS CNTRYCODE, COUNT(*) AS NUMCUST, COALESCE(SUM(t0.c_acctbal), 0) AS TOTACCTBAL FROM (SELECT c_custkey, c_phone, c_acctbal FROM customer WHERE c_phone = '13' OR (c_phone = '10' OR c_phone = '23') OR (c_phone = '21' OR c_phone = '19' OR (c_phone = '34' OR c_phone = '32'))) AS t0 INNER JOIN (SELECT CAST(CAST(CASE WHEN COUNT(*) = 0 THEN NULL ELSE COALESCE(SUM(c_acctbal), 0) END AS DECIMAL(15, 2)) / COUNT(*) AS DECIMAL(15, 2)) AS EXPR$0 FROM customer WHERE c_acctbal > 0.00 AND (c_phone = '13' OR (c_phone = '10' OR c_phone = '23') OR (c_phone = '21' OR c_phone = '19' OR (c_phone = '34' OR c_phone = '32')))) AS t3 ON t0.c_acctbal > t3.EXPR$0 LEFT JOIN (SELECT o_custkey, TRUE AS $f1 FROM orders GROUP BY o_custkey) AS t5 ON t0.c_custkey = t5.o_custkey WHERE t5.$f1 IS NULL GROUP BY t0.c_phone ORDER BY t0.c_phone